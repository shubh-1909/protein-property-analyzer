# -*- coding: utf-8 -*-
"""Protein_Analyzer_BioPython.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iThYyrbXzSBWzwnVyo3h5V3JN0mE4oft

# üß¨ Protein Property Analyzer using BioPython
Analyze key protein characteristics like molecular weight, isoelectric point (pI), and hydrophobicity using Python and BioPython.

---

## üìå Project Goals:
- Input a protein sequence
- Analyze its physical and chemical properties
- Visualize amino acid composition
- Build a job-ready portfolio project
"""

# üì¶ Install required library
!pip install biopython

## üß¨ Step 1: Input Protein Sequence
# Paste or type any valid protein sequence using standard 1-letter amino acid codes.

# Sample protein sequence (replace with your own!)
sequence = "MVKVYAPASSANMSVGFDVLGAAVTPVDGALLGDVVTVEAAETFSLNNLGQK"

"""## üß™ Step 2: Analyze the Sequence
We‚Äôll use BioPython‚Äôs `ProteinAnalysis` module to calculate:
- Molecular weight
- Isoelectric point (pI)
- GRAVY (hydrophobicity index)
- Amino acid frequency

"""

from Bio.SeqUtils.ProtParam import ProteinAnalysis

analyzed_seq = ProteinAnalysis(sequence)
mol_weight = analyzed_seq.molecular_weight()
isoelectric_point = analyzed_seq.isoelectric_point()
hydrophobicity = analyzed_seq.gravy()
amino_acids = analyzed_seq.get_amino_acids_percent()

"""## üìä Step 3: Display Protein Properties
The calculated values are shown below:

"""

print("üî¨ Molecular Weight:", round(mol_weight, 2), "Da")
print("üß™ Isoelectric Point (pI):", round(isoelectric_point, 2))
print("üíß Hydrophobicity (GRAVY):", round(hydrophobicity, 3))

"""## üîç Step 4: Amino Acid Composition
Let's view the distribution of each amino acid in the sequence:

"""

for aa, percent in amino_acids.items():
    print(f"{aa}: {round(percent * 100, 2)}%")

"""## üìà Step 5: Visualize the Composition
We‚Äôll use a bar chart to show amino acid frequencies:

"""

import matplotlib.pyplot as plt

labels = list(amino_acids.keys())
values = [round(v * 100, 2) for v in amino_acids.values()]

plt.figure(figsize=(10, 5))
plt.bar(labels, values, color='lightgreen', edgecolor='black')
plt.title("Amino Acid Composition (%)")
plt.xlabel("Amino Acids")
plt.ylabel("Percentage")
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

"""## ‚úÖ Conclusion
This protein analyzer extracts key physical and chemical properties of any input protein sequence. It's useful for bioinformatics, computational biology, and R&D applications.

---


"""